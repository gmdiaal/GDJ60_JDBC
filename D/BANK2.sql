
--멤버
CREATE TABLE MEMBER (
	ID			VARCHAR2(100) CONSTRAINT TABLE_ID_PK PRIMARY KEY,
	PW			VARCHAR2(100) CONSTRAINT TABLE_PW_C NOT NULL,
	NAME		VARCHAR2(100) CONSTRAINT TABLE_NAME_C NOT NULL,
	PHONE		VARCHAR2(100) CONSTRAINT TABLE_PHONE_U UNIQUE
);

ALTER TABLE MEMBER DROP CONSTRAINT TABLE_ID_PK;
ALTER TABLE MEMBER ADD CONSTRAINT TABLE_ID_PK PRIMARY KEY (ID);

SELECT *FROM USER_CONSTRAINTS;
SELECT * FROM tab;


CREATE TABLE ROLE (
	ROLE_NUM NUMBER CONSTRAINT ROLE__ROLE_NUM_PK PRIMARY KEY,
	ROME_NAME VARCHAR2(100)
);

CREATE TABLE MEMBER_ROLE (
	ID			VARCHAR2(100) CONSTRAINT MEMBER_ROLE__ID_FK  REFERENCES MEMBER,
	ROLE_NUM 	NUMBER CONSTRAINT MEMBER_ROLE__ROLE_NUM_FK  REFERENCES ROLE	
);

--계좌--
CREATE TABLE PRODUCT (
	ID			NUMBER		CONSTRAINT PRODUCT_NAME_PK PRIMARY KEY,
	INTEREST	NUMBER		CONSTRAINT PRODUCT_INTEREST_C NOT NULL,
	AVAILABLE	NUMBER		CONSTRAINT PRODUCT_AVAILABLE_C NOT NULL
);

CREATE TABLE PRODUCT_MEMBER (
	CODE		VARCHAR2(100)	CONSTRAINT PRODUCT_MEMBER__CODE_PK PRIMARY KEY,
	MEMBER_ID	VARCHAR2(100)	CONSTRAINT PRODUCT_MEMBER__MEMBER_ID_FK REFERENCES MEMBER (ID),
	PRODUCT_ID	NUMBER			CONSTRAINT PRODUCT_MEMBER__PRODUCT_ID_FK REFERENCES PRODUCT (ID),
	MONEY 		NUMBER			CONSTRAINT PRODUCT_MEMBER_MONEY_C NOT NULL,
	WHEN 		DATE			CONSTRAINT PRODUCT_WHEN_C NOT NULL
);

CREATE TABLE MANIPULATE (
	CODE		VARCHAR2(100)	CONSTRAINT MANIPULATE_CODE_FK REFERENCES PRODUCT_MEMBER,
	IN_OUT		NUMBER			CONSTRAINT MANIPULATE_IN_OUT_C NOT NULL,
	MONEY		NUMBER			CONSTRAINT MANIPULATE_MONEY_C NOT NULL,
	WHEN		DATE			CONSTRAINT MANIPULATE_WHEN_C NOT NULL
)

--회원생성
INSERT INTO MEMBER VALUES ('T1', '1234', 'TESTER_NAME1', 'TEST_PHONE1');
INSERT INTO MEMBER VALUES ('T2', '1234', 'TESTER_NAME2', 'TEST_PHONE2');

INSERT INTO "ROLE" VALUES (0, '회원');
INSERT INTO "ROLE" VALUES (1, '매니저');
INSERT INTO "ROLE" VALUES (2, '관리자');

INSERT INTO MEMBER_ROLE VALUES ('T1', 0);
INSERT INTO MEMBER_ROLE VALUES ('T2', 0);

SELECT M.*, R.*
FROM MEMBER M 
JOIN MEMBER_ROLE mr
ON (MR.ID=M.ID)
JOIN "ROLE" r 
ON (R.ROLE_NUM=MR.ROLE_NUM);
--회원생성 END

--상품생성
CREATE SEQUENCE PRODUCT_ID_SEQ;
DROP SEQUENCE PRODUCT_ID_SEQ;
INSERT INTO PRODUCT VALUES (PRODUCT_ID_SEQ.NEXTVAL, 1.1, 1);
INSERT INTO PRODUCT VALUES (PRODUCT_ID_SEQ.NEXTVAL, 2.2, 1);
INSERT INTO PRODUCT VALUES (PRODUCT_ID_SEQ.NEXTVAL, 3.3, 1);
SELECT * FROM PRODUCT p ;

--계좌생성
INSERT INTO PRODUCT_MEMBER VALUES ('1-1', 'T1', '1', 0, CURRENT_DATE);
INSERT INTO PRODUCT_MEMBER VALUES ('1-2', 'T1', '2', 0, CURRENT_DATE);
INSERT INTO PRODUCT_MEMBER VALUES ('2-1', 'T2', '1', 0, CURRENT_DATE);
INSERT INTO PRODUCT_MEMBER VALUES ('2-2', 'T2', '2', 0, CURRENT_DATE);
SELECT * FROM PRODUCT_MEMBER pm ;

--입출금+-
INSERT INTO MANIPULATE VALUES ('1-1', 1, 50000, SYSDATE);
INSERT INTO MANIPULATE VALUES ('1-1', 1, 10000, SYSDATE);
INSERT INTO MANIPULATE VALUES ('1-1', 0, 20000, SYSDATE);
INSERT INTO MANIPULATE VALUES ('1-1', 0, 5000, SYSDATE);
--잔액 업데이트
UPDATE PRODUCT_MEMBER SET MONEY= ( SELECT (SELECT SUM(MONEY) FROM MANIPULATE m WHERE IN_OUT = 1) - (SELECT SUM(MONEY) FROM MANIPULATE m WHERE IN_OUT = 0) FROM DUAL )
WHERE CODE= '1-1';
SELECT * FROM PRODUCT_MEMBER

--날짜순 입출금 출력
SELECT *
FROM MANIPULATE M
WHERE IN_OUT = 1
ORDER BY WHEN DESC;


